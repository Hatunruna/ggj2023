name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release
  VCPKG_COMMIT: f14984af3738e69f197bf0e647a8dca12de92996

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      VCPKG_ROOT: ${{github.workspace}}/vcpkg

    steps:
      # Compile vcpkg
      - name: vcpkg cache
        id: cache-vcpkg
        uses: actions/cache@v3
        with:
          path: vcpkg
          key: ${{ runner.os }}-vcpkg-${{ env.VCPKG_COMMIT }}

      - uses: actions/checkout@v3
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        with:
          repository: Microsoft/vcpkg
          path: vcpkg
          ref: ${{ env.VCPKG_COMMIT }}

      - name: Install vcpkg dependencies
        if: steps.cache-vcpkg.outputs.cache-hit != 'true'
        working-directory: ${{github.workspace}}/vcpkg
        run: |
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install boost-algorithm:x64-windows boost-container:x64-windows boost-filesystem:x64-windows boost-heap:x64-windows freetype:x64-windows pugixml:x64-windows sdl2:x64-windows stb:x64-windows zlib:x64-windows

      # Compile GF
      - uses: actions/checkout@v3
        with:
          repository: GamedevFramework/gf
          submodules: recursive
          path: gf

      - name: Extract gf revision
        shell: bash
        working-directory: ${{github.workspace}}/gf
        run: echo "revision=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        id: extract-gf-revision

      - name: gf cache
        id: cache-gf
        uses: actions/cache@v3
        with:
          path: gf
          key: ${{ runner.os }}-gf-${{ steps.extract-gf-revision.outputs.revision }}

      - uses: actions/checkout@v3
        if: steps.cache-gf.outputs.cache-hit != 'true'
        with:
          repository: GamedevFramework/gf
          submodules: recursive
          ref: ${{ steps.extract_branch.outputs.branch }}
          path: gf

      - name: Configure gf
        if: steps.cache-gf.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          cmake -DGF_USE_EMBEDDED_LIBS=OFF -DGF_BUILD_GAMES=OFF -DGF_BUILD_EXAMPLES=OFF -DGF_BUILD_DOCUMENTATION=OFF -DGF_DEBUG=OFF -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/gf/install -DCMAKE_UNITY_BUILD=ON -S ${{ github.workspace }}/gf -B ${{ github.workspace }}/gf/build

      - name: Build gf
        if: steps.cache-gf.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          cmake --build ${{ github.workspace }}/gf/build --config ${{ env.BUILD_TYPE }} --parallel

      - name: Install gf
        if: steps.cache-gf.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          set PATH=%PATH%;${{github.workspace}}/gf/build/library/${{ env.BUILD_TYPE }}
          cmake --install ${{ github.workspace }}/gf/build --config ${{ env.BUILD_TYPE }}

      # Build the game
      - uses: actions/checkout@v3
        with:
          path: ggj2023
          submodules: 'true'

      - name: Configure game
        run: cmake -S ${{github.workspace}}/ggj2023/ -B ${{github.workspace}}/ggj2023/build -DCMAKE_PREFIX_PATH=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/gf/install -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -T host=x64 -A x64

      - name: Build game
        run: cmake --build ${{github.workspace}}/ggj2023/build --config ${{env.BUILD_TYPE}} --parallel

      - name: Create game
        working-directory: ${{github.workspace}}/ggj2023/build
        run: cpack --config CPackConfig.cmake -C ${{env.BUILD_TYPE}}

      - uses: actions/upload-artifact@v3
        with:
          name: ggj2023-snapshot
          path: ${{github.workspace}}/ggj2023/build/*.zip
          if-no-files-found: error


  # build-linux:
  #   runs-on: ubuntu-22.04

  #   steps:
  #     # Dependencies
  #     - name: Install dependency
  #       run: |
  #         sudo apt update
  #         sudo apt install -y libsdl2-dev libboost-dev libfreetype6-dev zlib1g-dev libpugixml-dev libbox2d-dev

  #     # gf build
  #     - name: gf cache
  #       id: cache-gf
  #       uses: actions/cache@v3
  #       with:
  #         path: gf
  #         key: ${{ runner.os }}-gf-1.0.0

  #     - uses: actions/checkout@v3
  #       if: steps.cache-gf.outputs.cache-hit != 'true'
  #       with:
  #         repository: GamedevFramework/gf
  #         submodules: recursive
  #         path: gf

  #     - name: Patch SDL2 dependencies
  #       if: steps.cache-gf.outputs.cache-hit != 'true'
  #       run: |
  #         cat ${{github.workspace}}/gf/library/CMakeLists.txt | sed 's/SDL2::SDL2/\$\{SDL2_LIBRARIES\}/' | tee ${{github.workspace}}/gf/library/CMakeLists.txt > /dev/null
  #         echo 'include_directories(SYSTEM ${SDL2_INCLUDE_DIRS})' >> ${{github.workspace}}/gf/library/CMakeLists.txt

  #     - name: Configure gf
  #       if: steps.cache-gf.outputs.cache-hit != 'true'
  #       run: cmake -DGF_BUILD_GAMES=OFF -DGF_BUILD_EXAMPLES=OFF -DGF_BUILD_DOCUMENTATION=OFF -DGF_SINGLE_COMPILTATION_UNIT=OFF -DGF_DEBUG=OFF -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/gf/build/install -S \${{github.workspace}}/gf/ -B ${{github.workspace}}/gf/build

  #     - name: Build gf
  #       if: steps.cache-gf.outputs.cache-hit != 'true'
  #       run: cmake --build ${{github.workspace}}/gf/build --config ${{env.BUILD_TYPE}} --parallel

  #     - name: Install gf
  #       if: steps.cache-gf.outputs.cache-hit != 'true'
  #       run: cmake --install ${{github.workspace}}/gf/build --config ${{env.BUILD_TYPE}} --strip

  #     # ggj2023 build
  #     - uses: actions/checkout@v3
  #       with:
  #         path: ggj2023
  #         submodules: 'true'

  #     - name: Configure ggj2023
  #       run: cmake -S ${{github.workspace}}/ggj2023/ -B ${{github.workspace}}/ggj2023/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=${{github.workspace}}/gf/build/install

  #     - name: Build ggj2023
  #       run: cmake --build ${{github.workspace}}/ggj2023/build --config ${{env.BUILD_TYPE}} --parallel

  # build-macos:
  #   runs-on: macos-12

  #   env:
  #     VCPKG_ROOT: ${{github.workspace}}/vcpkg

  #   steps:
  #     # Install gf via vcpkg
  #     - name: vcpkg cache
  #       id: cache-vcpkg
  #       uses: actions/cache@v3
  #       with:
  #         path: vcpkg
  #         key: ${{ runner.os }}-vcpkg-2022.09.27

  #     - uses: actions/checkout@v3
  #       if: steps.cache-vcpkg.outputs.cache-hit != 'true'
  #       with:
  #         repository: Microsoft/vcpkg
  #         ref: 2022.09.27
  #         path: vcpkg

  #     - name: Build gf
  #       if: steps.cache-vcpkg.outputs.cache-hit != 'true'
  #       working-directory: ${{github.workspace}}/vcpkg
  #       run: |
  #         ./bootstrap-vcpkg.sh
  #         ./vcpkg install gamedev-framework:x64-osx box2d:x64-osx

  #     # ggj2023 build
  #     - uses: actions/checkout@v3
  #       with:
  #         path: ggj2023
  #         submodules: 'true'

  #     - name: Configure ggj2023
  #       run: cmake -S ${{github.workspace}}/ggj2023/ -B ${{github.workspace}}/ggj2023/build -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

  #     - name: Build ggj2023
  #       run: cmake --build ${{github.workspace}}/ggj2023/build --config ${{env.BUILD_TYPE}} --parallel
